@import "tailwindcss";
@import "tw-animate-css";

@custom-variant dark (&:is(.dark *));

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-mono);
  --color-sidebar-ring: var(--sidebar-ring);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar: var(--sidebar);
  --color-chart-5: var(--chart-5);
  --color-chart-4: var(--chart-4);
  --color-chart-3: var(--chart-3);
  --color-chart-2: var(--chart-2);
  --color-chart-1: var(--chart-1);
  --color-ring: var(--ring);
  --color-input: var(--input);
  --color-border: var(--border);
  --color-destructive: var(--destructive);
  --color-accent-foreground: var(--accent-foreground);
  --color-accent: var(--accent);
  --color-muted-foreground: var(--muted-foreground);
  --color-muted: var(--muted);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-secondary: var(--secondary);
  --color-primary-foreground: var(--primary-foreground);
  --color-primary: var(--primary);
  --color-popover-foreground: var(--popover-foreground);
  --color-popover: var(--popover);
  --color-card-foreground: var(--card-foreground);
  --color-card: var(--card);
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);
}

:root {
  --radius: 0.625rem;
  --background: oklch(1 0 0);
  --foreground: oklch(0.145 0 0);
  --card: oklch(1 0 0);
  --card-foreground: oklch(0.145 0 0);
  --popover: oklch(1 0 0);
  --popover-foreground: oklch(0.145 0 0);
  --primary: oklch(0.205 0 0);
  --primary-foreground: oklch(0.985 0 0);
  --secondary: oklch(0.97 0 0);
  --secondary-foreground: oklch(0.205 0 0);
  --muted: oklch(0.97 0 0);
  --muted-foreground: oklch(0.556 0 0);
  --accent: oklch(0.97 0 0);
  --accent-foreground: oklch(0.205 0 0);
  --destructive: oklch(0.577 0.245 27.325);
  --border: oklch(0.922 0 0);
  --input: oklch(0.922 0 0);
  --ring: oklch(0.708 0 0);
  --chart-1: oklch(0.646 0.222 41.116);
  --chart-2: oklch(0.6 0.118 184.704);
  --chart-3: oklch(0.398 0.07 227.392);
  --chart-4: oklch(0.828 0.189 84.429);
  --chart-5: oklch(0.769 0.188 70.08);
  --sidebar: oklch(0.985 0 0);
  --sidebar-foreground: oklch(0.145 0 0);
  --sidebar-primary: oklch(0.205 0 0);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.97 0 0);
  --sidebar-accent-foreground: oklch(0.205 0 0);
  --sidebar-border: oklch(0.922 0 0);
  --sidebar-ring: oklch(0.708 0 0);
}

.dark {
  --background: oklch(0.145 0 0);
  --foreground: oklch(0.985 0 0);
  --card: oklch(0.205 0 0);
  --card-foreground: oklch(0.985 0 0);
  --popover: oklch(0.205 0 0);
  --popover-foreground: oklch(0.985 0 0);
  --primary: oklch(0.922 0 0);
  --primary-foreground: oklch(0.205 0 0);
  --secondary: oklch(0.269 0 0);
  --secondary-foreground: oklch(0.985 0 0);
  --muted: oklch(0.269 0 0);
  --muted-foreground: oklch(0.708 0 0);
  --accent: oklch(0.269 0 0);
  --accent-foreground: oklch(0.985 0 0);
  --destructive: oklch(0.704 0.191 22.216);
  --border: oklch(1 0 0 / 10%);
  --input: oklch(1 0 0 / 15%);
  --ring: oklch(0.556 0 0);
  --chart-1: oklch(0.488 0.243 264.376);
  --chart-2: oklch(0.696 0.17 162.48);
  --chart-3: oklch(0.769 0.188 70.08);
  --chart-4: oklch(0.627 0.265 303.9);
  --chart-5: oklch(0.645 0.246 16.439);
  --sidebar: oklch(0.205 0 0);
  --sidebar-foreground: oklch(0.985 0 0);
  --sidebar-primary: oklch(0.488 0.243 264.376);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.269 0 0);
  --sidebar-accent-foreground: oklch(0.985 0 0);
  --sidebar-border: oklch(1 0 0 / 10%);
  --sidebar-ring: oklch(0.556 0 0);
}

@layer base {
  * {
    @apply border-border outline-ring/50;
  }
  body {
    @apply bg-background text-foreground;
  }
}

@keyframes fadeInOut {
  0% { opacity: 0; }
  20% { opacity: 1; }
  80% { opacity: 1; }
  100% { opacity: 0; }
}

.animate-fade-in-out {
  animation: fadeInOut 2s ease-in-out infinite;
}

@keyframes float {
  0%, 100% { transform: translateY(0px); }
  50% { transform: translateY(-20px); }
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.animate-fade-in {
  animation: fadeIn 0.6s ease-out forwards;
}

/* Parallax Elements */
[data-parallax] {
  will-change: transform;
}

/* Enhanced Parallax Hero Styles */

/* Base Parallax Styles */
.parallax-hero {
  position: relative;
  overflow: hidden;
  min-height: 100vh;
}

.parallax-layer {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 120%;
  pointer-events: none;
}

/* Enhanced Background Gradients */
.parallax-bg-primary {
  background: linear-gradient(135deg, 
    hsl(var(--primary) / 0.08) 0%, 
    hsl(var(--primary) / 0.04) 25%, 
    hsl(var(--primary) / 0.06) 50%, 
    hsl(var(--primary) / 0.02) 75%, 
    transparent 100%
  );
  opacity: 0.7;
}

.parallax-gradient-overlay {
  background: linear-gradient(45deg, 
    hsl(var(--primary) / 0.15) 0%, 
    hsl(var(--primary) / 0.08) 25%,
    hsl(var(--primary) / 0.12) 50%,
    hsl(var(--primary) / 0.06) 75%,
    hsl(var(--primary) / 0.1) 100%
  );
  background-size: 400% 400%;
  animation: gradientShift 20s ease infinite;
  opacity: 0.5;
}

@keyframes gradientShift {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

/* Floating Orbs - Enhanced */
.parallax-orb {
  position: absolute;
  border-radius: 50%;
  filter: blur(1px);
  animation: orbFloat 8s ease-in-out infinite;
  opacity: 0.6;
}

.parallax-orb-1 {
  width: 120px;
  height: 120px;
  background: radial-gradient(circle, hsl(var(--primary) / 0.3) 0%, transparent 70%);
  top: 10%;
  left: 5%;
  animation-delay: 0s;
}

.parallax-orb-2 {
  width: 200px;
  height: 200px;
  background: radial-gradient(circle, hsl(var(--primary) / 0.2) 0%, transparent 70%);
  top: 50%;
  right: 10%;
  animation-delay: -3s;
}

.parallax-orb-3 {
  width: 80px;
  height: 80px;
  background: radial-gradient(circle, hsl(var(--primary) / 0.4) 0%, transparent 70%);
  bottom: 30%;
  left: 15%;
  animation-delay: -6s;
}

.parallax-orb-4 {
  width: 160px;
  height: 160px;
  background: radial-gradient(circle, hsl(var(--primary) / 0.25) 0%, transparent 70%);
  top: 25%;
  right: 25%;
  animation-delay: -2s;
}

.parallax-orb-5 {
  width: 100px;
  height: 100px;
  background: radial-gradient(circle, hsl(var(--primary) / 0.35) 0%, transparent 70%);
  bottom: 15%;
  right: 5%;
  animation-delay: -4s;
}

@keyframes orbFloat {
  0%, 100% { 
    transform: translateY(0px) rotate(0deg) scale(1);
    opacity: 0.6;
  }
  33% { 
    transform: translateY(-30px) rotate(120deg) scale(1.1);
    opacity: 0.8;
  }
  66% { 
    transform: translateY(15px) rotate(240deg) scale(0.9);
    opacity: 0.7;
  }
}

/* Geometric Shapes */
.parallax-shapes-container {
  overflow: hidden;
}

.parallax-shape {
  position: absolute;
  opacity: 0.15;
  animation: shapeRotate 25s linear infinite;
}

.parallax-triangle {
  width: 0;
  height: 0;
  border-left: 25px solid transparent;
  border-right: 25px solid transparent;
  border-bottom: 40px solid hsl(var(--primary) / 0.3);
  top: 20%;
  left: 65%;
  animation-delay: 0s;
}

.parallax-hexagon {
  width: 50px;
  height: 28.87px;
  background: hsl(var(--primary) / 0.3);
  position: relative;
  top: 40%;
  left: 10%;
  animation-delay: -8s;
}

.parallax-hexagon:before,
.parallax-hexagon:after {
  content: "";
  position: absolute;
  width: 0;
  border-left: 25px solid transparent;
  border-right: 25px solid transparent;
}

.parallax-hexagon:before {
  bottom: 100%;
  border-bottom: 14.43px solid hsl(var(--primary) / 0.3);
}

.parallax-hexagon:after {
  top: 100%;
  border-top: 14.43px solid hsl(var(--primary) / 0.3);
}

.parallax-circle {
  width: 60px;
  height: 60px;
  border: 2px solid hsl(var(--primary) / 0.3);
  border-radius: 50%;
  top: 65%;
  right: 20%;
  animation-delay: -15s;
}

@keyframes shapeRotate {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

/* Grid Pattern */
.parallax-grid {
  background-image: 
    linear-gradient(hsl(var(--primary) / 0.08) 1px, transparent 1px),
    linear-gradient(90deg, hsl(var(--primary) / 0.08) 1px, transparent 1px);
  background-size: 40px 40px;
  opacity: 0.4;
  animation: gridMove 30s linear infinite;
}

@keyframes gridMove {
  0% { transform: translate(0, 0); }
  100% { transform: translate(40px, 40px); }
}

/* Particles System */
.parallax-particles {
  position: absolute;
  width: 100%;
  height: 100%;
}

.parallax-particle {
  position: absolute;
  width: 2px;
  height: 2px;
  background: hsl(var(--foreground) / 0.4);
  border-radius: 50%;
  animation: particleFloat 12s ease-in-out infinite;
}

/* Generate particle positions dynamically */
.parallax-particle:nth-child(1) { left: 10%; top: 20%; animation-delay: 0s; }
.parallax-particle:nth-child(2) { left: 20%; top: 80%; animation-delay: -2s; }
.parallax-particle:nth-child(3) { left: 30%; top: 40%; animation-delay: -4s; }
.parallax-particle:nth-child(4) { left: 40%; top: 60%; animation-delay: -6s; }
.parallax-particle:nth-child(5) { left: 50%; top: 30%; animation-delay: -8s; }
.parallax-particle:nth-child(6) { left: 60%; top: 70%; animation-delay: -10s; }
.parallax-particle:nth-child(7) { left: 70%; top: 50%; animation-delay: -1s; }
.parallax-particle:nth-child(8) { left: 80%; top: 25%; animation-delay: -3s; }
.parallax-particle:nth-child(9) { left: 90%; top: 65%; animation-delay: -5s; }
.parallax-particle:nth-child(10) { left: 15%; top: 45%; animation-delay: -7s; }

@keyframes particleFloat {
  0%, 100% {
    transform: translateY(0px) translateX(0px);
    opacity: 0;
  }
  10% {
    opacity: 1;
  }
  90% {
    opacity: 1;
  }
  50% {
    transform: translateY(-80px) translateX(30px);
    opacity: 0.8;
  }
}

/* Enhanced Blur Effects */
.parallax-blur-sm { filter: blur(2px); }
.parallax-blur-md { filter: blur(4px); }
.parallax-blur-lg { filter: blur(8px); }
.parallax-blur-xl { filter: blur(16px); }
.parallax-blur-2xl { filter: blur(24px); }
.parallax-blur-3xl { filter: blur(32px); }

/* Mouse Interaction Effects */
.parallax-interactive {
  transition: transform 0.3s ease-out;
}

/* Performance Optimizations */
.parallax-layer,
.parallax-orb,
.parallax-shape,
.parallax-particle {
  will-change: transform;
  backface-visibility: hidden;
  perspective: 1000px;
}

/* Utility Classes */
.parallax-fade-in {
  opacity: 1;
  transition: opacity 0.6s ease-out;
}

.parallax-fade-out {
  opacity: 0;
  transition: opacity 0.6s ease-out;
}

/* Responsive Design */
@media (max-width: 768px) {
  .parallax-orb-1, 
  .parallax-orb-2, 
  .parallax-orb-3, 
  .parallax-orb-4, 
  .parallax-orb-5 {
    width: 60px;
    height: 60px;
  }
  
  .parallax-triangle {
    border-left-width: 15px;
    border-right-width: 15px;
    border-bottom-width: 25px;
  }
  
  .parallax-hexagon {
    width: 30px;
    height: 17.32px;
  }
  
  .parallax-hexagon:before,
  .parallax-hexagon:after {
    border-left-width: 15px;
    border-right-width: 15px;
  }
  
  .parallax-hexagon:before {
    border-bottom-width: 8.66px;
  }
  
  .parallax-hexagon:after {
    border-top-width: 8.66px;
  }
  
  .parallax-circle {
    width: 40px;
    height: 40px;
  }
  
  .parallax-grid {
    background-size: 30px 30px;
  }
  
  @keyframes gridMove {
    0% { transform: translate(0, 0); }
    100% { transform: translate(30px, 30px); }
  }
}

/* Dark Mode Support */
@media (prefers-color-scheme: dark) {
  .parallax-particle {
    background: hsl(var(--foreground) / 0.6);
  }
  
  .parallax-gradient-overlay {
    opacity: 0.3;
  }
  
  .parallax-orb {
    opacity: 0.4;
  }
}

/* Accessibility */
@media (prefers-reduced-motion: reduce) {
  .animate-fade-in {
    animation: none;
    opacity: 1;
    transform: none;
  }
  
  [data-parallax] {
    transform: none !important;
  }
  
  .parallax-orb,
  .parallax-shape,
  .parallax-particle,
  .parallax-gradient-overlay,
  .parallax-grid {
    animation: none;
  }
  
  .parallax-layer[data-parallax] {
    transform: none !important;
  }
}