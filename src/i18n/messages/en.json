{
  "HomePage": {
    "title": "Welcome to FTES",
    "about": "FTES is a platform that helps you manage your business effectively",
    "subtitle": "First Technology Education Services",
    "description": "FTES (First Technology Education Services) is an intelligent learning system that applies artificial intelligence (AI) to provide personalized, modern, and effective learning experiences for everyone interested in information technology.",
    "start_now": "Start Now",
    "create_chatbot": "Create Chatbot",
    "features_title": "Outstanding Features",
    "features": {
      "create_chatbot": {
        "title": "Create Chatbot with AI",
        "description": "Create intelligent chatbots with AI expert assistance, serving specific user needs."
      },
      "ai_combat": {
        "title": "AI Combat",
        "description": "Explore AI capabilities in dialogue and debate, helping to better understand AI technology."
      },
      "api_integration": {
        "title": "API Integration",
        "description": "Export chatbot as API to integrate into other websites, serving developer needs."
      }
    },
    "management_title": "Smart Chatbot Management",
    "management": {
      "manage": {
        "title": "Manage Chatbot",
        "description": "Easily manage and organize created chatbots, with the ability to edit and update information."
      },
      "public": {
        "title": "Public Chatbot",
        "description": "Share your chatbot with the community and receive user feedback."
      },
      "conversation": {
        "title": "Conversation Management",
        "description": "Track and manage conversations, analyze interactions and improve response quality."
      },
      "history": {
        "title": "Chat History",
        "description": "Store and retrieve chat history, helping to track progress and improve user experience."
      }
    },
    "cta": {
      "title": "Start Your Smart Learning Journey",
      "description": "Discover AI tools specially designed for learning and skill development.",
      "button": "View Chatbots"
    }
  },
  "sidebar": {
    "home": "Home",
    "assistants": "Assistants",
    "chatbot": "Chatbot",
    "settings": "Settings",
    "create_chatbot": "Create chatbot",
    "chatbot_list": "Chatbot list",
    "ai_combat": "AI Combat",
    "profile": "Profile",
    "code_grader": "Grade Code",
    "grade_assignment": "Grade Assignment",
    "api_testing": "API Testing",
    "code_evaluation": "Code Evaluation",
    "code_runner": "Code Runner",
    "image_generation": "Image GenAI",
    "logout": "Logout",
    "language": {
      "title": "Language",
      "en": "English",
      "vi": "Vietnamese"
    }
  },
  "aiCombat": {
    "loading": "Loading chatbot list...",
    "title": "AI COMBAT ARENA",
    "subtitle": "Watch two AI agents engage in an intelligent conversation",
    "leftFighter": "Left Fighter",
    "rightFighter": "Right Fighter",
    "selectChatbot": "Select a chatbot",
    "selectModel": "Select a model",
    "firstAskingAgent": "First Asking Agent",
    "startConversation": "Start Conversation",
    "back": "Back",
    "home": "Home",
    "continue": "Continue",
    "stop": "Stop",
    "leftAI": "Left AI",
    "rightAI": "Right AI",
    "vs": "VS",
    "maxConversations": "Reached maximum {count} conversations. Click Continue to start a new round.",
    "modelOptions": {
      "gemini25": "Gemini 2.5 Flash",
      "gemini20": "Gemini 2.0 Flash"
    }
  },
  "chatbotList": {
    "back": "Back",
    "home": "Home",
    "searchPlaceholder": "Search chatbots...",
    "createNew": "Create New",
    "myChatbots": "My Chatbots",
    "publicChatbots": "Public Chatbots",
    "noChatbots": "No chatbots yet",
    "createFirst": "Create your first chatbot now",
    "createNewChatbot": "Create New Chatbot",
    "noPublicChatbots": "No public chatbots",
    "noPublicChatbotsDesc": "No public chatbots have been created yet",
    "public": "Public",
    "private": "Private",
    "integratedTools": "Integrated {count} tool calling",
    "chatWithBot": "Chat with bot",
    "edit": "Edit",
    "delete": "Delete",
    "deleteConfirm": "Are you sure you want to delete this chatbot?",
    "errors": {
      "loadError": "Error loading chatbots",
      "loadPublicError": "Error loading public chatbots",
      "deleteSuccess": "Chatbot deleted successfully",
      "deleteError": "Error deleting chatbot",
      "loginRequired": "Please login to create a chatbot"
    }
  },
  "editorChatbot": {
    "title": {
      "create": "Create New AI Chatbot",
      "update": "Update AI Chatbot"
    },
    "subtitle": {
      "create": "Create an intelligent AI chatbot with Gemini technology.",
      "update": "Edit and update your chatbot."
    },
    "back": "Back",
    "backToList": "Back to chatbot list",
    "geminiKey": {
      "status": "Gemini API Key:",
      "set": "Set",
      "notSet": "Not set",
      "tooltip": {
        "set": "You have set up Gemini API Key, can use full Gemini AI features.",
        "notSet": "You haven't set up Gemini API Key.",
        "setupNow": "Set up now"
      }
    },
    "model": {
      "select": "Select AI model",
      "placeholder": "Select AI model"
    },
    "clearChat": "Clear conversation",
    "clear": "Clear",
    "settings": "Settings",
    "tabs": {
      "create": "Create chatbot",
      "update": "Create and update",
      "config": "Configuration"
    },
    "emptyState": {
      "create": {
        "title": "Create New AI Chatbot",
        "description": "Smart AI assistant will help you create a new chatbot from scratch.",
        "guide": {
          "title": "Usage Guide",
          "item1": "Describe the chatbot you want to create",
          "item2": "Define the purpose and target users",
          "item3": "Set up features and capabilities"
        },
        "examples": {
          "title": "Creation Examples",
          "item1": "Create a customer support chatbot",
          "item2": "Set up an educational chatbot",
          "item3": "Configure a sales chatbot"
        },
        "start": {
          "title": "Get Started",
          "description": "Enter the description of the chatbot you want to create in the chat box below!"
        }
      },
      "update": {
        "title": "Update AI Chatbot",
        "description": "Smart AI assistant will help you update and modify your chatbot.",
        "guide": {
          "title": "Usage Guide",
          "item1": "Describe the changes you want to make",
          "item2": "Update information about target users",
          "item3": "Add or modify features"
        },
        "examples": {
          "title": "Update Examples",
          "item1": "Update chatbot prompts",
          "item2": "Add new features",
          "item3": "Modify existing settings"
        },
        "start": {
          "title": "Get Started",
          "description": "Enter your questions or describe the changes you want to make in the chat box below!"
        }
      }
    },
    "loading": {
      "checking": "Checking login information..."
    },
    "unauthorized": {
      "title": "Login Required",
      "description": "You need to login to use the {action} AI chatbot feature.",
      "redirecting": "Redirecting to home page in 3 seconds...",
      "buttons": {
        "home": "Go to home page to login",
        "back": "Back to chatbot list"
      }
    },
    "clearModal": {
      "title": "Clear conversation",
      "description": "Are you sure you want to clear the entire conversation?",
      "buttons": {
        "clear": "Clear",
        "cancel": "Cancel"
      }
    },
    "errors": {
      "loginRequired": "You need to login to use this feature",
      "login": "Login"
    }
  },
  "chatMessages": {
    "emptyState": {
      "title": "Start creating your chatbot in the left frame",
      "description": "Enter your chatbot requirements in the left frame for the AI assistant to understand and create your chatbot",
      "loading": {
        "title": "Loading chatbot details..."
      }
    },
    "sourceDocuments": {
      "title": "Source Documents",
      "count": "Source Documents ({count})",
      "source": "Source: {source}"
    }
  },
  "profile": {
    "title": "Welcome to AI FTES",
    "subtitle": "Please complete your profile to get started.",
    "loading": {
      "checking": "Checking login information...",
      "loading": "Loading profile..."
    },
    "form": {
      "name": {
        "label": "Full Name",
        "placeholder": "Enter your full name"
      },
      "phone": {
        "label": "Phone Number",
        "placeholder": "Enter your phone number"
      },
      "major": {
        "label": "Major",
        "placeholder": "Select your major",
        "options": {
          "SE": "Software Engineering",
          "AI": "Artificial Intelligence",
          "IB": "International Business"
        }
      },
      "submit": {
        "loading": "Updating...",
        "text": "Update Profile"
      }
    },
    "gemini": {
      "title": "Gemini API Key",
      "status": {
        "valid": "API key is valid",
        "invalid": "Not verified"
      },
      "form": {
        "apiKey": {
          "placeholder": "Enter Gemini API key"
        },
        "model": {
          "placeholder": "Select model"
        },
        "test": {
          "loading": "Testing...",
          "text": "Test API key"
        },
        "save": {
          "loading": "Saving...",
          "text": "Save API key"
        }
      }
    },
    "errors": {
      "userNotFound": "User not found",
      "updateError": "Error updating profile",
      "testError": "Could not test API key",
      "invalidKey": "Invalid API key",
      "saveError": "Please fill in all information",
      "saveSuccess": "API key saved successfully"
    },
    "back": "Back"
  },
  "modeToggle": {
    "toggleTheme": "Toggle Theme"
  },
  "Login": {
    "back": "Back",
    "welcome": "Welcome to FTES AI",
    "description": "Login to access all platform features",
    "loginWithGoogle": "Login with Google",
    "useGoogleAccount": "Use your Google account to login",
    "agreement": "By logging in, you agree to our",
    "terms": "Terms of Service",
    "and": "and",
    "privacy": "Privacy Policy",
    "ourPolicy": "our",
    "features": {
      "smartAI": {
        "title": "Smart AI",
        "description": "Using advanced Gemini technology"
      },
      "security": {
        "title": "High Security",
        "description": "Data is encrypted and protected"
      },
      "easyUse": {
        "title": "Easy to Use",
        "description": "Friendly, intuitive interface"
      }
    }
  },
  "gradeCode": {
    "file_tree": "File Tree",
    "selected": "Selected",
    "no_files_to_display": "No files to display.",
    "clone_repo_first": "Clone a repository first.",
    "selected_files": "Selected Files",
    "no_files_selected": "No files selected"
  },
  "codeGrader": {
    "title": "Graded Assignments History",
    "newGrading": "New Grading",
    "createFirstAssignment": "Create First Assignment",
    "noAssignmentsFound": "No graded assignments found",
    "viewDetails": "View Details",
    "deleteAssignment": "Delete Assignment",
    "deleteConfirm": "Are you sure you want to delete this assignment? This action cannot be undone.",
    "cancel": "Cancel",
    "delete": "Delete",
    "files": "Files",
    "criteria": "Criteria",
    "more": "more",
    "messages": {
      "loadError": "Failed to load assignments",
      "deleteSuccess": "Assignment deleted successfully",
      "deleteError": "Failed to delete assignment"
    },
    "grade": {
      "viewFolderStructure": "View Folder Structure Evaluation",
      "folderStructureEvaluation": "Folder Structure Evaluation",
      "close": "Close",
      "viewHistory": "View History"
    },
    "history": {
      "backToHistory": "Back to History",
      "assignmentNotFound": "Assignment Not Found",
      "goBack": "Go Back",
      "invalidAssignmentId": "Invalid assignment ID",
      "loadError": "Failed to load assignment details",
      "viewFolderStructure": "View Folder Structure Evaluation",
      "folderStructureEvaluation": "Folder Structure Evaluation",
      "close": "Close"
    },
    "repositoryConfig": {
      "placeholder": "Enter GitHub repository URL",
      "fileExtensions": "File extensions:",
      "cloning": "Cloning...",
      "cloneButton": "Clone Repository"
    },
    "gradingPanel": {
      "title": "Grading Criteria",
      "criteriaCount": "{count} criteria",
      "feCriteria": "FE Criteria",
      "beCriteria": "BE Criteria",
      "projectDescriptionPlaceholder": "Enter project description (optional)",
      "generate": "Generate",
      "grading": "Grading...",
      "gradeButton": "Grade Selected Files"
    },
    "criteriaInput": {
      "folderStructureTitle": "Folder Structure Criteria:",
      "folderStructurePlaceholder": "Enter folder criteria",
      "otherTitle": "Other Criteria:",
      "otherPlaceholder": "Enter criteria {index}",
      "dialogTitleFolder": "Edit Folder Structure Criteria",
      "dialogTitleOther": "Edit Other Criteria #{index}",
      "dialogPlaceholderFolder": "Enter folder structure criteria",
      "dialogPlaceholderOther": "Enter other criteria",
      "cancel": "Cancel",
      "save": "Save Changes"
    },
    "gradingResult": {
      "messages": {
        "fileRemoved": "File removed successfully!",
        "noResults": "No results available to grade",
        "gradeSuccess": "Overall grading completed successfully!",
        "gradeError": "Failed to grade overall results"
      },
      "export": {
        "folderStructureSection": "Folder Structure Evaluation",
        "folderStructureSheet": "Folder Structure",
        "fileName": "File Name",
        "rating": "Rating",
        "ratingValue": "Rating Value",
        "comments": "Comments",
        "evaluation": "Evaluation",
        "overallGrade": "Overall Grade",
        "criteriaSheet": "Criteria {index}"
      },
      "table": {
        "fileName": "File Name",
        "rating": "Rating",
        "action": "Action",
        "viewDetails": "View Details"
      },
      "gradeOverallButton": "Grade Overall Result",
      "overallAnalysisTitle": "Overall Grade Analysis",
      "title": "Grading Results",
      "exportButton": "Export to Excel",
      "criteriaTab": "Criteria {index}",
      "modal": {
        "comments": "Comments",
        "evaluation": "Evaluation",
        "sourceCode": "Source Code",
        "fullscreen": "Fullscreen",
        "viewSourceCode": "View Source Code",
        "removeFile": "Remove File",
        "close": "Close"
      },
      "noResults": "No grading results available."
    }
  },
  "apiTesting": {
    "title": "API Test Case Generator",
    "addApi": "Add API",
    "addFirstApi": "Add First API",
    "noApisAdded": "No APIs added yet",
    "table": {
      "method": "Method",
      "endpoint": "API Endpoint",
      "baseUrl": "Base URL",
      "description": "Description",
      "fieldDescription": "Field Description",
      "action": "Action",
      "exampleTestCases": "Example Test Cases",
      "footer": "Total {count} APIs added"
    },
    "placeholders": {
      "endpoint": "/api/...",
      "baseUrl": "https://api.example.com",
      "description": "Describe what this API does...",
      "fieldDescription": "Describe the fields and their types..."
    },
    "buttons": {
      "generate": "Generate",
      "testApi": "Test API",
      "detail": "Detail",
      "results": "Results"
    },
    "testCases": {
      "count": "{count} test case",
      "countPlural": "{count} test cases",
      "none": "No test cases generated yet",
      "passed": "{passed}/{total} passed"
    },
    "dialogs": {
      "testCaseDetails": {
        "title": "Test Case Details",
        "testCase": "Test Case",
        "description": "Description:",
        "expectedOutput": "Expected Output:"
      },
      "testResults": {
        "title": "Test Results",
        "summary": "Test Summary",
        "summaryDescription": "{passed} out of {total} tests passed",
        "successRate": "Success Rate",
        "testDescription": "Test Description:",
        "actualResponse": "Actual API Response:",
        "evaluationReason": "Evaluation Reason:",
        "passed": "PASSED",
        "failed": "FAILED"
      }
    },
    "status": {
      "pass": "Pass",
      "fail": "Fail"
    },
    "messages": {
      "fillRequiredFields": "Please fill in all required fields",
      "generateSuccess": "Test cases generated successfully",
      "generateError": "Failed to generate test cases",
      "testSuccess": "API testing completed! {passed}/{total} tests passed",
      "testError": "Failed to test API",
      "provideBaseUrlAndTestCases": "Please provide base URL and ensure test cases are generated"
    }
  },
  "ragAgent": {
    "loading": "Loading...",
    "errorLoadChatbot": "Failed to load chatbot information",
    "loginRequired": "You need to login to use this feature.",
    "notSetupGemini": "You have not set up Gemini API Key, go to Profile to set up Gemini API Key",
    "setupNow": "Setup now",
    "manageDocuments": "Manage Documents",
    "edit": "Edit",
    "apiDocs": "API Docs",
    "clearChat": "Clear chat history",
    "confirmDeleteAll": "Confirm delete all data",
    "deleteAllDesc": "This action will delete all conversations and cannot be undone.",
    "confirm": "Confirm",
    "deleteAllConversations": "Delete all conversations",
    "loadingText": "Loading...",
    "loadingShort": "Loading",
    "notLoggedIn": "Not logged in",
    "loginToUse": "Login to use all features",
    "geminiKeySet": "Set up",
    "geminiKeyNotSet": "Not set up",
    "geminiKeyTooltipSet": "You have set up Gemini API Key, you can use all Gemini AI features.",
    "geminiKeyTooltipNotSet": "You have not set up Gemini API Key.",
    "assistantDefaultName": "AI Assistant",
    "thinkingTexts": [
      "Analyzing your question...",
      "Searching for relevant information...",
      "Processing data...",
      "Thinking about the answer...",
      "Summarizing information...",
      "Preparing response..."
    ],
    "startConversation": "Start a conversation with the AI assistant"
  },
  "documentManagement": {
    "manageDocuments": "Manage Documents",
    "description": "Add, edit, delete, and upload documents for the chatbot.",
    "addDocument": "Add Document",
    "editDocument": "Edit Document",
    "uploadFile": "Upload File",
    "reload": "Reload",
    "loading": "Loading...",
    "loadingData": "Loading data...",
    "deleteSelected": "Delete Selected",
    "edit": "Edit",
    "delete": "Delete",
    "confirm": "Confirm",
    "save": "Save",
    "create": "Create",
    "cancel": "Cancel",
    "content": "Content",
    "table": {
      "id": "ID",
      "content": "Content",
      "action": "Action",
      "noDocuments": "No documents available",
      "charCount": "{count} characters"
    },
    "pagination": {
      "displaying": "Displaying {from} - {to} of {total} documents",
      "prev": "Previous",
      "next": "Next",
      "page": "Page {current} / {total}"
    },
    "confirmDeleteTitle": "Are you sure you want to delete?",
    "confirmDeleteDesc": "This action will delete the document from the system.",
    "confirmDeleteSelectedDesc": "Delete all selected documents from the system.",
    "toast": {
      "loadError": "Failed to load document list",
      "emptyContent": "Content cannot be empty",
      "updateSuccess": "Document updated successfully",
      "addSuccess": "Document added successfully",
      "updateError": "Failed to update document",
      "addError": "Failed to add document",
      "deleteSuccess": "Document deleted successfully",
      "deleteError": "Failed to delete document"
    }
  },
  "apiDocs": {
    "title": "API Integration Guide",
    "description": "Refer to the detailed guide to integrate the chatbot into your website/app.",
    "noApiKey": "No API key",
    "yourToken": "your_token",
    "alert": {
      "title": "API Integration",
      "description": "Use this API to integrate the chatbot into your website or application."
    },
    "endpoint": "API Endpoint",
    "method": "Method",
    "headers": "Headers",
    "formData": "Request Data (FormData)",
    "params": "Parameters",
    "paramsQuery": "User message (string)",
    "paramsBotId": "Unique chatbot ID",
    "paramsConversationId": "(Optional) To maintain conversation context",
    "paramsModelName": "gemini-2.5-flash-preview-05-20 or gemini-2.0-flash",
    "paramsApiKey": "Your API key (current: {currentApiKey})",
    "paramsAttachs": "Array of attached files (if any)",
    "responseFormat": "Response Format",
    "responseFormatDesc": "API returns streaming as Server-Sent Events (SSE). Each response is a JSON:",
    "finalResponse": "Final response:",
    "copy": "Copy",
    "copied": "Copied!",
    "close": "Close",
    "alertWarning": {
      "title": "Note",
      "description": "Make sure to handle errors properly when integrating the API into your system."
    },
    "example": {
      "title": "Implementation Example",
      "fetchTab": "Fetch API",
      "curlTab": "cURL",
      "fetchComment": "Example using fetch",
      "tokenComment": "Get token from cookie",
      "apiKeyComment": "Your API key from cookie",
      "attachComment": "Add attachment file if any",
      "handleResponse": "Handle streaming response",
      "handleStreaming": "Handle streaming message",
      "handleFinal": "Handle final response",
      "query": "Your message here",
      "conversationId": "optional_conversation_id",
      "streamingContent": "Streaming message content...",
      "finalResponseContent": "Complete response message"
    }
  },
  "gradeAssignment": {
    "title": "Grade Assignment",
    "uploadImages": "Upload Images",
    "extractedText": "Extracted Text",
    "questionsList": "Questions List",
    "dragDropText": "Drag and drop images or click to select",
    "supportedFormats": "Supported: JPG, PNG, BMP, TIFF, WEBP",
    "dropImagesHere": "Drop images here...",
    "selectedImages": "Selected {count} images",
    "clearAll": "Clear All",
    "extractText": "Extract Text",
    "extracting": "Extracting...",
    "extractSuccess": "Text extracted successfully!",
    "copyText": "Copy Text",
    "copied": "Copied",
    "textLength": "Length: {length} characters",
    "noQuestionsDetected": "No questions detected yet. Please upload images containing question text.",
    "totalQuestions": "Total {count} questions detected:",
    "addQuestion": "Add Question",
    "editQuestion": "Edit",
    "deleteQuestion": "Delete",
    "saveQuestion": "Save",
    "cancelEdit": "Cancel",
    "newQuestion": "New question:",
    "addNewQuestion": "Add",
    "processedImages": "Processed {count} images: {names}",
    "savedImage": "Saved image: {path}",
    "errors": {
      "onlyImages": "Only image files are accepted (jpg, png, etc.)",
      "selectAtLeastOne": "Please select at least one image",
      "extractionFailed": "Failed to extract text from images",
      "unknownError": "An unknown error occurred"
    }
  },
  "landingPage": {
    "hero": {
      "title": "FTES AI Platform",
      "subtitle": "Revolutionize Your Development Workflow",
      "description": "Advanced AI-powered tools for developers, educators, and content creators. From automated testing to intelligent grading, unleash the power of artificial intelligence.",
      "getStarted": "Get Started Now",
      "learnMore": "Learn More",
      "trustedBy": "Trusted by developers and educators worldwide"
    },
    "features": {
      "title": "Powerful AI Tools",
      "subtitle": "Everything you need to enhance your development and educational workflow",
      "apiTesting": {
        "title": "Smart API Testing",
        "description": "AI-powered REST API test case generation and validation. Automatically create comprehensive test suites with intelligent assertions.",
        "features": ["Auto test case generation", "Multi-method support", "Smart assertions", "Detailed reporting"]
      },
      "codeGrader": {
        "title": "Intelligent Code Grader",
        "description": "Advanced AI evaluation for code quality, structure, and best practices across multiple programming languages.",
        "features": ["Multi-language support", "Code quality analysis", "Structure evaluation", "Detailed feedback"]
      },
      "gradeAssignment": {
        "title": "Assignment Grader",
        "description": "Automated grading system with OCR text extraction and AI-powered answer evaluation for educational assignments.",
        "features": ["OCR text extraction", "Auto question detection", "AI-powered grading", "Statistical analysis"]
      },
      "imageGeneration": {
        "title": "AI Image Creator",
        "description": "Generate stunning images from text prompts or transform existing images with advanced AI technology.",
        "features": ["Text-to-image", "Image-to-image", "High quality output", "Multiple styles"]
      }
    },
    "technologies": {
      "title": "Supported Technologies",
      "subtitle": "Wide range of programming languages and frameworks",
      "languages": {
        "title": "Programming Languages",
        "list": ["JavaScript", "TypeScript", "Python", "Java", "C++", "C", "HTML", "CSS"]
      },
      "frameworks": {
        "title": "Frameworks & Tools",
        "list": ["React", "Next.js", "Node.js", "Express", "Flask", "Spring", "Django"]
      }
    },
    "stats": {
      "testCases": {
        "number": "10K+",
        "label": "Test Cases Generated"
      },
      "codeFiles": {
        "number": "50K+",
        "label": "Code Files Graded"
      },
      "assignments": {
        "number": "5K+",
        "label": "Assignments Processed"
      },
      "images": {
        "number": "25K+",
        "label": "Images Generated"
      }
    },
    "cta": {
      "title": "Ready to Transform Your Workflow?",
      "description": "Join thousands of developers and educators using FTES AI to streamline their processes.",
      "primaryButton": "Start Free Trial",
      "secondaryButton": "View Demo"
    }
  },
  "imageGeneration": {
    "title": "AI Image Generator",
    "subtitle": "Generate stunning images using AI. Enter a text prompt or upload an image for image-to-image generation.",
    "loginRequired": {
      "title": "Login Required",
      "description": "Please login to access the AI image generation feature"
    },
    "form": {
      "promptLabel": "Text Prompt *",
      "promptPlaceholder": "Describe the image you want to generate... (e.g., 'A beautiful sunset over mountains with vibrant colors')",
      "expandPrompt": "Expand",
      "promptModalTitle": "Write Your Detailed Prompt",
      "closeModal": "Close",
      "suggestPrompt": "Suggest Prompt by AI",
      "generatingPrompt": "Suggesting...",
      "referenceImageLabel": "Reference Image (Optional)",
      "uploadText": "Click to upload reference image",
      "uploadSubtext": "PNG, JPG up to 10MB",
      "generateButton": "Generate Image",
      "generating": "Generating...",
      "clearButton": "Clear"
    },
    "result": {
      "title": "Generated Image",
      "previewButton": "Preview",
      "previewTitle": "Image Preview",
      "downloadButton": "Download Image",
      "needMoreDetails": "Need More Details",
      "tryAgainTip": "💡 Try adding more specific details to your prompt above",
      "generatingText": "Generating your image...",
      "placeholderText": "Generated image will appear here"
    },
    "tips": {
      "title": "💡 Tips for Better Results",
      "goodPrompts": {
        "title": "Writing Good Prompts:",
        "tip1": "Be specific and descriptive",
        "tip2": "Include style keywords (realistic, cartoon, oil painting)",
        "tip3": "Mention lighting and mood",
        "tip4": "Specify colors and composition"
      },
      "referenceImages": {
        "title": "Using Reference Images:",
        "tip1": "Upload high-quality reference images",
        "tip2": "Use images that match your desired style",
        "tip3": "Describe how you want to modify the reference",
        "tip4": "Combine text prompts with images for best results"
      }
    },
    "errors": {
      "enterPrompt": "Please enter a prompt",
      "loginRequired": "Please login to generate images",
      "fileSizeLimit": "File size should be less than 10MB",
      "invalidFileType": "Please select a valid image file",
      "serverError": "Server error. Please try again later.",
      "generateFailed": "Failed to generate image. Please try again.",
      "promptGenerationFailed": "Failed to generate prompt suggestion. Please try again.",
      "apiKeyRequired": "API key is required. Please set up your Gemini API key in profile settings.",
      "setupApiKey": "Setup API Key",
      "unexpectedFormat": "Unexpected response format. Please try again.",
      "moreDetails": "Please provide more details: {message}"
    },
    "success": {
      "imageGenerated": "Image generated successfully!",
      "promptGenerated": "Prompt suggestion generated successfully!"
    }
  }
}
